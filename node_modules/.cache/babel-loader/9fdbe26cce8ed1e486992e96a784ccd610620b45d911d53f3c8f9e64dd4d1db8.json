{"ast":null,"code":"var _jsxFileName = \"/home/avik/Documents/shyam/chatbot-flow/chatbot-flow-react/src/SettingsPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsPanel = ({\n  selectedNode,\n  updateNodeLabel,\n  setSelectedNode,\n  setIsSettingsPanelOpen,\n  selectedEdge\n}) => {\n  _s();\n  var _selectedNode$data;\n  const [input, setInput] = useState(selectedNode === null || selectedNode === void 0 ? void 0 : (_selectedNode$data = selectedNode.data) === null || _selectedNode$data === void 0 ? void 0 : _selectedNode$data.label);\n  const updateHandler = () => {\n    updateNodeLabel(input);\n  };\n  const backBtnHandler = () => {\n    setSelectedNode(null);\n    setIsSettingsPanelOpen(false);\n  };\n  useEffect(() => {\n    var _selectedNode$data2;\n    setInput(selectedNode === null || selectedNode === void 0 ? void 0 : (_selectedNode$data2 = selectedNode.data) === null || _selectedNode$data2 === void 0 ? void 0 : _selectedNode$data2.label);\n  }, [selectedNode]);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"settings-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading setting-heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined icon\",\n        onClick: backBtnHandler,\n        children: \"arrow_back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Settings Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), selectedNode || selectedEdge ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: \"Edit the label of the selected node:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateHandler,\n        className: \"update-btn\",\n        disabled: input === selectedNode.data.label,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: \"Select a node to edit its label, Click on a node to select it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsPanel, \"nRr7T3bbJ/m6mV7sugH0Ftou460=\");\n_c = SettingsPanel;\nexport default SettingsPanel;\nvar _c;\n$RefreshReg$(_c, \"SettingsPanel\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SettingsPanel","selectedNode","updateNodeLabel","setSelectedNode","setIsSettingsPanelOpen","selectedEdge","_s","_selectedNode$data","input","setInput","data","label","updateHandler","backBtnHandler","_selectedNode$data2","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","value","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["/home/avik/Documents/shyam/chatbot-flow/chatbot-flow-react/src/SettingsPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst SettingsPanel = ({ selectedNode, updateNodeLabel, setSelectedNode, setIsSettingsPanelOpen, selectedEdge }) => {\n  const [input, setInput] = useState(selectedNode?.data?.label)\n\n  const updateHandler = () => {\n    updateNodeLabel(input)\n  }\n\n  const backBtnHandler= () => {\n    setSelectedNode(null)\n    setIsSettingsPanelOpen(false)\n  }\n\n\n  useEffect(()=> {\n    setInput(selectedNode?.data?.label)\n  }, [selectedNode])\n\n\n\n  return (\n    <aside className=\"settings-panel\">\n      <div className='heading setting-heading'>\n      <span className=\"material-symbols-outlined icon\" onClick={backBtnHandler}>\n        arrow_back\n      </span>\n      <div>\n        Settings Panel\n      </div>\n      </div>\n      {selectedNode || selectedEdge ? <div className='main'>\n        <div className=\"description\">Edit the label of the selected node:</div>\n        <textarea rows=\"5\"\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n        />\n        <button onClick={updateHandler} className='update-btn' disabled={input === selectedNode.data.label}>Update</button>\n      </div> : (\n        <div className='main'>\n          <div className=\"description\">Select a node to edit its label, Click on a node to select it.</div>\n        </div>\n      )}\n    </aside>\n  );\n};\n\nexport default SettingsPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}