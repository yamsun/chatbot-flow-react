{"ast":null,"code":"var _jsxFileName = \"/home/avik/Documents/shyam/chatbot-flow/chatbot-flow-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls, MiniMap, Background } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport Sidebar from './Sidebar';\nimport CustomNode from './CustomNode'; // Import Custom Node Component\nimport './index.css';\nimport Topbar from './Topbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  type: 'customNode',\n  // Specify the custom node type\n  data: {\n    label: 'Custom Node'\n  },\n  position: {\n    x: 250,\n    y: 20\n  },\n  sourcePosition: 'right',\n  targetPosition: 'left'\n}, {\n  id: '2',\n  type: 'customNode',\n  // Specify the custom node type\n  data: {\n    label: 'Custom Node'\n  },\n  position: {\n    x: 550,\n    y: 120\n  },\n  sourcePosition: 'right',\n  targetPosition: 'left'\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2',\n  animated: true\n}];\nlet id = 0;\nconst getId = () => `dndnode_${id++}`;\nconst DnDFlow = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const type = event.dataTransfer.getData('application/reactflow');\n    const position = reactFlowInstance.screenToFlowPosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n    const newNode = {\n      id: getId(),\n      type: 'customNode',\n      // Specify the custom node type\n      sourcePosition: 'right',\n      targetPosition: 'left',\n      position,\n      data: {\n        label: 'New Custom Node',\n        icon: 'https://path.to/your/icon.png'\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance]);\n  const nodeTypes = {\n    customNode: CustomNode\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndflow\",\n      children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reactflow-wrapper\",\n          ref: reactFlowWrapper,\n          children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n            nodes: nodes,\n            edges: edges,\n            onNodesChange: onNodesChange,\n            onEdgesChange: onEdgesChange,\n            onConnect: onConnect,\n            onInit: setReactFlowInstance,\n            onDrop: onDrop,\n            onDragOver: onDragOver,\n            nodeTypes: nodeTypes // Register the custom node types\n            ,\n            children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Background, {\n              variant: \"dots\",\n              gap: 12,\n              size: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(DnDFlow, \"s1hu1oC/LcvmYaDaAbQjcY1Q9fQ=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = DnDFlow;\nexport default DnDFlow;\nvar _c;\n$RefreshReg$(_c, \"DnDFlow\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","MiniMap","Background","Sidebar","CustomNode","Topbar","jsxDEV","_jsxDEV","initialNodes","id","type","data","label","position","x","y","sourcePosition","targetPosition","initialEdges","source","target","animated","getId","DnDFlow","_s","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","getData","screenToFlowPosition","clientX","clientY","newNode","icon","nds","concat","nodeTypes","customNode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onInit","variant","gap","size","_c","$RefreshReg$"],"sources":["/home/avik/Documents/shyam/chatbot-flow/chatbot-flow-react/src/App.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  useNodesState,\n  useEdgesState,\n  Controls,\n  MiniMap,\n  Background,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nimport Sidebar from './Sidebar';\nimport CustomNode from './CustomNode'; // Import Custom Node Component\nimport './index.css';\nimport Topbar from './Topbar';\n\nconst initialNodes = [\n  {\n    id: '1',\n    type: 'customNode', // Specify the custom node type\n    data: { label: 'Custom Node' },\n    position: { x: 250, y: 20 },\n    sourcePosition: 'right',\n    targetPosition: 'left',\n  },\n  {\n    id: '2',\n    type: 'customNode', // Specify the custom node type\n    data: { label: 'Custom Node' },\n    position: { x: 550, y: 120 },\n    sourcePosition: 'right',\n    targetPosition: 'left',\n  },\n];\n\nconst initialEdges = [\n  { id: 'e1-2', source: '1', target: '2', animated: true },\n];\n\nlet id = 0;\nconst getId = () => `dndnode_${id++}`;\n\nconst DnDFlow = () => {\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [],\n  );\n\n  const onDragOver = useCallback((event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n\n  const onDrop = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      const type = event.dataTransfer.getData('application/reactflow');\n\n      const position = reactFlowInstance.screenToFlowPosition({\n        x: event.clientX,\n        y: event.clientY,\n      });\n      const newNode = {\n        id: getId(),\n        type: 'customNode', // Specify the custom node type\n        sourcePosition: 'right',\n        targetPosition: 'left',\n        position,\n        data: { label: 'New Custom Node', icon: 'https://path.to/your/icon.png' },\n      };\n\n      setNodes((nds) => nds.concat(newNode));\n    },\n    [reactFlowInstance],\n  );\n\n  const nodeTypes = { customNode: CustomNode };\n\n \n\n  return (\n    <div className='screen'>\n      <Topbar />\n      <div className=\"dndflow\">\n        <ReactFlowProvider>\n          <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\n            <ReactFlow\n              nodes={nodes}\n              edges={edges}\n              onNodesChange={onNodesChange}\n              onEdgesChange={onEdgesChange}\n              onConnect={onConnect}\n              onInit={setReactFlowInstance}\n              onDrop={onDrop}\n              onDragOver={onDragOver}\n              nodeTypes={nodeTypes} // Register the custom node types\n            >\n              <Controls />\n              <Background variant=\"dots\" gap={12} size={1} />\n            </ReactFlow>\n          </div>\n          <Sidebar />\n        </ReactFlowProvider>\n      </div>\n    </div>\n  );\n};\n\nexport default DnDFlow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}