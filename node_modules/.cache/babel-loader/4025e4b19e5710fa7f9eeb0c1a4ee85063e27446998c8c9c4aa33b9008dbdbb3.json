{"ast":null,"code":"var _jsxFileName = \"/home/avik/Documents/shyam/chatbot-flow/chatbot-flow-react/src/SettingsPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsPanel = ({\n  selectedNode,\n  updateNodeLabel\n}) => {\n  _s();\n  const [input, setInput] = useState(selectedNode.data.label);\n  const updateHandler = () => {\n    updateNodeLabel(input);\n  };\n  if (!selectedNode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-panel\",\n      children: \"Select a node to edit its label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"settings-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"material-symbols-outlined\",\n        children: \"arrow_back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), \"Settings Panel\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: \"Edit the label of the selected node:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateHandler,\n        className: \"update-btn\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsPanel, \"0cU3cNDDljcb7d+Khqaashp95O8=\");\n_c = SettingsPanel;\nexport default SettingsPanel;\nvar _c;\n$RefreshReg$(_c, \"SettingsPanel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SettingsPanel","selectedNode","updateNodeLabel","_s","input","setInput","data","label","updateHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","rows","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/avik/Documents/shyam/chatbot-flow/chatbot-flow-react/src/SettingsPanel.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SettingsPanel = ({ selectedNode, updateNodeLabel }) => {\n  const [input, setInput] = useState(selectedNode.data.label)\n\n  const updateHandler = () => {\n    updateNodeLabel(input)\n  }\n\n  if (!selectedNode) {\n    return <div className=\"settings-panel\">Select a node to edit its label</div>;\n  }\n\n  return (\n    <aside className=\"settings-panel\">\n      <div className='heading'>\n      <span class=\"material-symbols-outlined\">\n        arrow_back\n      </span>\n        Settings Panel\n      </div>\n      <div className='main'>\n        <div className=\"description\">Edit the label of the selected node:</div>\n        <textarea rows=\"5\"\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n        />\n        <button onClick={updateHandler} className='update-btn'>Update</button>\n      </div>\n    </aside>\n  );\n};\n\nexport default SettingsPanel;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACI,YAAY,CAACK,IAAI,CAACC,KAAK,CAAC;EAE3D,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BN,eAAe,CAACE,KAAK,CAAC;EACxB,CAAC;EAED,IAAI,CAACH,YAAY,EAAE;IACjB,oBAAOF,OAAA;MAAKU,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9E;EAEA,oBACEf,OAAA;IAAOU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC/BX,OAAA;MAAKU,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACxBX,OAAA;QAAMgB,KAAK,EAAC,2BAA2B;QAAAL,QAAA,EAAC;MAExC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,kBAEP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNf,OAAA;MAAKU,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBX,OAAA;QAAKU,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvEf,OAAA;QAAUiB,IAAI,EAAC,GAAG;QAChBC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEd,KAAM;QACbe,QAAQ,EAAGC,CAAC,IAAKf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFf,OAAA;QAAQuB,OAAO,EAAEd,aAAc;QAACC,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ,CAAC;AAACX,EAAA,CA9BIH,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAgCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}