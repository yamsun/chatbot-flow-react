{"ast":null,"code":"var _jsxFileName = \"/home/avik/Documents/shyam/chatbot-flow/chatbot-flow-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls, MiniMap, Background } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport Sidebar from './Sidebar';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  data: {\n    label: 'input node'\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\nlet id = 0;\nconst getId = () => `dndnode_${id++}`;\nconst DnDFlow = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n\n    // const type = event.dataTransfer.getData('application/reactflow');\n\n    // check if the dropped element is valid\n\n    // reactFlowInstance.project was renamed to reactFlowInstance.screenToFlowPosition\n    // and you don't need to subtract the reactFlowBounds.left/top anymore\n    // details: https://reactflow.dev/whats-new/2023-11-10\n    const position = reactFlowInstance.screenToFlowPosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n    const newNode = {\n      id: getId(),\n      position,\n      data: {\n        label: ` node`\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dndflow\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onInit: setReactFlowInstance,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          fitView: true,\n          children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Background, {\n            variant: \"dots\",\n            gap: 12,\n            size: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(DnDFlow, \"s1hu1oC/LcvmYaDaAbQjcY1Q9fQ=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = DnDFlow;\nexport default DnDFlow;\nvar _c;\n$RefreshReg$(_c, \"DnDFlow\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","MiniMap","Background","Sidebar","jsxDEV","_jsxDEV","initialNodes","id","data","label","position","x","y","getId","DnDFlow","_s","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","screenToFlowPosition","clientX","clientY","newNode","nds","concat","className","children","ref","onInit","fitView","fileName","_jsxFileName","lineNumber","columnNumber","variant","gap","size","_c","$RefreshReg$"],"sources":["/home/avik/Documents/shyam/chatbot-flow/chatbot-flow-react/src/App.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  useNodesState,\n  useEdgesState,\n  Controls,\n  MiniMap,\n  Background,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nimport Sidebar from './Sidebar';\n\nimport './index.css';\n\nconst initialNodes = [\n  {\n    id: '1',\n    data: { label: 'input node' },\n    position: { x: 250, y: 5 },\n  },\n];\n\nlet id = 0;\nconst getId = () => `dndnode_${id++}`;\n\nconst DnDFlow = () => {\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [],\n  );\n\n  const onDragOver = useCallback((event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n\n  const onDrop = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      // const type = event.dataTransfer.getData('application/reactflow');\n\n      // check if the dropped element is valid\n     \n\n      // reactFlowInstance.project was renamed to reactFlowInstance.screenToFlowPosition\n      // and you don't need to subtract the reactFlowBounds.left/top anymore\n      // details: https://reactflow.dev/whats-new/2023-11-10\n      const position = reactFlowInstance.screenToFlowPosition({\n        x: event.clientX,\n        y: event.clientY,\n      });\n      const newNode = {\n        id: getId(),\n       \n        position,\n        data: { label: ` node` },\n      };\n\n      setNodes((nds) => nds.concat(newNode));\n    },\n    [reactFlowInstance],\n  );\n\n  return (\n    <div className=\"dndflow\">\n      <ReactFlowProvider>\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onInit={setReactFlowInstance}\n            onDrop={onDrop}\n            onDragOver={onDragOver}\n            fitView\n          >\n            <Controls />\n            <MiniMap />\n            <Background  variant=\"dots\" gap={12} size={1}/>\n          </ReactFlow>\n        </div>\n        <Sidebar />\n      </ReactFlowProvider>\n    </div>\n  );\n};\n\nexport default DnDFlow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}